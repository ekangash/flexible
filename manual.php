

@ Доступ к админ панели
Route: /admin/
Email: admin@admin.com
password: 1111

Данный файл предназначен для подробного описания каждой
 функциональной логике применяющейся в данном проекте.


 [Папка engine] - двигатель всей системы
    Папка Config
    Папка Core
    Папка DI
        di container необходим для управления всеми зависимостями
    Папка Helper
    Папка Service
        В данной папки находятся провайдеры, построенные на основе абстрактного провайдера.
        Провайдеры необходимы, что-бы добавить и проименовать обьекты в Ди контейнер.
        


        

[Функции и их применение]
    Функция preg_match - Выполняет проверку на соответствие регулярному выражению
        <?php
           // Символ "i" после закрывающего ограничителя шаблона означает
    // регистронезависимый поиск.
    if (preg_match("/php/i", "PHP is the web scripting language of choice.")) {
        echo "Вхождение найдено.";
    } else {
        echo "Вхождение не найдено.";
    }
  ?>

[Что касаеться static] 


  Если в статическом класе хочешь иниациализировать обьект в кострукторе, потом хочешь вызывать статические методы статического класса которые будут 
  вызывать методы обьекта, то необходимо перед тем как вызвать данный статический метод, создать экземпляр данного (статического) класса.
  И каким образом данный статический обьект привязываеться к экземпляру данного класса?
  Ведь все происходит наоборот, если изменить статические свойства и методы статичесеским образом то измениться и его экземпляр, но не наоборот.



  У статических элементов есть ряд полезных характеристик.
  Они доступны из любой точки сценария. 
  Статическое свойство доступно каждому экземпляру этого класса. Поэтому можно определить значения, 
  которые должны быть доступны всем объектам данного типа. 
  И наконец, сам факт, что не нужно иметь экземпляр класса для доступа к его статическому свойству или методу, 
  позволит избежать создания экземпляров исключительно ради вызова простой функции.